openapi: 3.0.3
info:
  title: Django Vue Template
  version: 1.0.0
  description: Your project description
paths:
  /admin/api/main/documents/:
    get:
      operationId: admin_api_main_documents_retrieve
      tags:
      - admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/documents/{id}/:
    get:
      operationId: admin_api_main_documents_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/documents/find/:
    get:
      operationId: admin_api_main_documents_find_retrieve
      tags:
      - admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/images/:
    get:
      operationId: admin_api_main_images_retrieve
      tags:
      - admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/images/{id}/:
    get:
      operationId: admin_api_main_images_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/images/find/:
    get:
      operationId: admin_api_main_images_find_retrieve
      tags:
      - admin
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/pages/:
    get:
      operationId: admin_api_main_pages_retrieve
      tags:
      - admin
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/pages/{id}/:
    get:
      operationId: admin_api_main_pages_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - admin
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/pages/find/:
    get:
      operationId: admin_api_main_pages_find_retrieve
      tags:
      - admin
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/images/:
    get:
      operationId: api_images_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/images/{id}/:
    get:
      operationId: api_images_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/images/find/:
    get:
      operationId: api_images_find_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/pages/:
    get:
      operationId: api_pages_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/pages/{id}/:
    get:
      operationId: api_pages_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/pages/find/:
    get:
      operationId: api_pages_find_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v2/todos/:
    get:
      operationId: api_v2_todos_list
      tags:
      - todo
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
          description: ''
    post:
      operationId: api_v2_todos_create
      description: More descriptive text
      parameters:
      - in: query
        name: todo_description
        schema:
          type: string
        description: Filter by desc
        examples:
          Example1:
            value: '1993-08-23'
            summary: short optional summary
            description: longer description
      - in: query
        name: todo_title
        schema:
          type: string
        description: Filter by title
      tags:
      - todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoRequest'
            examples:
              Example1:
                value: '[{"model": "todo.todo", "pk": null, "fields": {"todo_title":
                  "tit", "todo_description": "tat"}}]'
                summary: Example 1
                description: longer description
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TodoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TodoRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
              examples:
                Example1:
                  value: '[{"model": "todo.todo", "pk": null, "fields": {"todo_title":
                    "tit", "todo_description": "tat"}}]'
                  summary: Example 1
                  description: longer description
          description: ''
  /api/v2/todos/{id}/:
    get:
      operationId: api_v2_todos_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - todo
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
    put:
      operationId: api_v2_todos_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TodoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TodoRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
    patch:
      operationId: api_v2_todos_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTodoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTodoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTodoRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
    delete:
      operationId: api_v2_todos_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - todo
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/users/:
    get:
      operationId: api_v2_users_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/v2/users/{id}/:
    get:
      operationId: api_v2_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    PatchedTodoRequest:
      type: object
      properties:
        todo_title:
          type: string
          maxLength: 100
        todo_description:
          type: string
          maxLength: 200
    Todo:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        todo_title:
          type: string
          maxLength: 100
        todo_description:
          type: string
          maxLength: 200
        created:
          type: string
          format: date-time
          readOnly: true
        owner:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
      required:
      - created
      - id
      - owner
      - url
    TodoRequest:
      type: object
      properties:
        todo_title:
          type: string
          maxLength: 100
        todo_description:
          type: string
          maxLength: 200
    User:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        todos:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
      required:
      - id
      - todos
      - url
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
