name: Create VPS instance using VultrCLI

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: false
        default: 'warning'

env:
  VULTR_VPS_REGION: syd
  VULTR_VPS_PLAN: vc2-1c-1gb
  VULTR_VPS_OS_IMAGE: 186 # CentOS
  VULTR_VPS_APP_ID: 17 # Docker
  VULTR_APP_NAME: django-vue-stack
  SSH_EMAIL_ADDRESS: sammykerridge@gmail.com

jobs:
  prepare:
    name: Prepare SSH keys and startup script
    outputs:
      STARTUP_SCRIPT_ID: ${{ steps.set-ids.outputs.STARTUP_SCRIPT_ID }}
      SSH_KEY_ID: ${{ steps.set-ids.outputs.SSH_KEY_ID }}
    runs-on: ubuntu-latest
    steps:
      # ============== PREPARE =====================
      - name: Install vultr-cli
        uses: techknowlogick/action-vultr@v2
        with:
          token: ${{ secrets.VULTR_API_KEY }}
      
      - name: Checkout server startup script and github scripts
        uses: Bhacaz/checkout-files@v1
        with:
          files: ".github/scripts start-script.sh"
          token: ${{ secrets.GH_ACTIONS_READ_ONLY }}
      
      # ============== SSH KEYS =====================
      - name: Generate + upload new SSH keys
        id: generate-keys
        run: bash -eu .github/scripts/manage-vultr.sh --ssh
        env:
          VULTR_API_KEY: ${{ secrets.VULTR_API_KEY }}

      - name: Read in and mask private key
        id: private-key
        if: hashFiles('key.txt') != ''
        run: |
          PRIVATE_KEY=$(cat key.txt)
          
          # cat key.txt | while read line
          # do
          #   echo "::add-mask::$line"
          # done

          echo "::set-output name=PRIVATE_KEY::$PRIVATE_KEY"

      - name: fuck fuck fuck
        run: echo ${{ steps.private-key.outputs.PRIVATE_KEY }}

      # - name: Add SSH private key to Github Secrets
      #   if: hashFiles('key.txt') != ''
      #   uses: philips-software/Repo-Secret-Manager@main
      #   with:
      #     action: create
      #     token: ${{ secrets.GH_PA_TOKEN }}
      #     secret-names: GH_SSH_PRIVATE_KEY
      #     secret-values: "${{ steps.private-key.outputs.PRIVATE_KEY }}"

      # ============== START SCRIPT =====================
      - name: Find and replace secrets in start script
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "<GH_ACCESS_TOKEN>"
          replace: "${{ secrets.GH_PA_TOKEN }}"
          include: "start-script.sh"

      # - name: Find and replace secrets in start script
      #   uses: jacobtomlinson/gha-find-replace@master
      #   with:
      #     find: "<GH_SSH_PRIVATE_KEY>"
      #     replace: "${{ secrets.GH_SSH_PRIVATE_KEY }}"
      #     include: "start-script.sh"

      - name: Find and replace secrets in start script
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "<GH_SSH_URL>"
          replace: "${{ github.event.repository.ssh_url }}"
          include: "start-script.sh"

      - name: Find and replace secrets in start script
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "<GH_USERNAME>"
          replace: "${{ github.repository_owner }}"
          include: "start-script.sh"

      - name: Find and replace secrets in start script
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "<VULTR_APP_NAME>"
          replace: "${{ env.VULTR_APP_NAME }}"
          include: "start-script.sh"

      - name: Encode and upload start script to Vultr
        run: bash -eu .github/scripts/manage-vultr.sh --start-script
        env:
          VULTR_API_KEY: ${{ secrets.VULTR_API_KEY }}

      - name: Set outputs for next job to use
        id: set-ids
        run: |
          echo "::set-output name=STARTUP_SCRIPT_ID::${{ env.STARTUP_SCRIPT_ID }}"
          echo "::set-output name=SSH_KEY_ID::${{ env.SSH_KEY_ID }}"

  deploy:
    name: Deploy Vultr VPS Instance
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      # ============== PREPARE =====================
      - name: Install vultr-cli
        uses: techknowlogick/action-vultr@v2
        with:
          token: ${{ secrets.VULTR_API_KEY }}
      
      - name: Checkout github scripts
        uses: Bhacaz/checkout-files@v1
        with:
          files: ".github/scripts"
          token: ${{ secrets.GH_ACTIONS_READ_ONLY }}
      
      # ============== DEPLOY =====================
      - name: Create instance using vultr-cli
        run: bash -eux .github/scripts/manage-vultr.sh --create-instance
        env:
          VULTR_API_KEY: ${{ secrets.VULTR_API_KEY }}
          STARTUP_SCRIPT_ID: ${{ needs.prepare.outputs.STARTUP_SCRIPT_ID }}
          SSH_KEY_ID: ${{ needs.prepare.outputs.SSH_KEY_ID }}

      - name: Wait for instance start then get IP
        run: bash -eux .github/scripts/manage-vultr.sh --get-ip
        env:
          VULTR_API_KEY: ${{ secrets.VULTR_API_KEY }}

      - name: Add instance IP address to Github Secrets
        uses: philips-software/Repo-Secret-Manager@main
        with:
          action: create
          token: ${{ secrets.GH_PA_TOKEN }}
          secret-names: VULTR_VPS_INSTANCE_IP
          secret-values: ${{ env.VULTR_VPS_INSTANCE_IP }}