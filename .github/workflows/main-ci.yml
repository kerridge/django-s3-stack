name: Build & Deploy

on:
  push:
    branches: [ digitalocean ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/django-s3-stack
  TRIGGER_DIRECTORIES: api .github util
  VULTR_APP_NAME: django-vue-stack

jobs:
  check:
    name: Check for changes
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check if modified files in project subdirectory
        id: check_files
        run: ./util/if_changes_in_subdirectory.sh ${{ env.TRIGGER_DIRECTORIES }}


  build:
    name: Build container
    needs: check
    if: needs.check.outputs.run_job == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # https://github.com/docker/login-action
      - name: Log into Dockerhub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Run test target inside Docker container
      - name: Django Test
        id: docker_test
        uses: docker/build-push-action@v2
        with:
          context: ./api
          file: ./api/Dockerfile.prod
          target: test
          builder: ${{ steps.buildx.outputs.name }}
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache


      - name: Build & push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./api
          file: ./api/Dockerfile.prod
          target: prod
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  deploy:
    name: Run deploy script via SSH
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh script using private key
      uses: appleboy/ssh-action@master
      env:
        USER: root
        PROJ_DIR: /home/docker/django-s3-stack
        DEPLOY_SCRIPT: ./update-app.sh
      with:
        host: ${{ secrets.VULTR_VPS_INSTANCE_IP }}
        username: ${{ env.USER }}
        key: ${{ secrets.GH_SSH_PRIVATE_KEY }}
        script_stop: true
        script: |
          cd ${{ env.PROJ_DIR }}
          git pull origin main
          ${{ env.DEPLOY_SCRIPT }} ${{ github.event.repository.name }}
